#!/usr/bin/ruby

require_relative "#{__dir__}/ensure_redcarpet.rb"
require 'open3'

class CustomRender < Redcarpet::Render::HTML
  include Rouge::Plugins::Redcarpet
end
def rouge_markdown(text)
  github_styles = Rouge::Themes::Github.render(scope: '.highlight')
  rich_text_style = "
  <style>
  body { font-family: sans-serif }
  code { font-family: monospace; }
  p    { margin: 0; }
  #{github_styles}
  </style>
  "
  render_options = {
      filter_html: true,
      hard_wrap: true,
      link_attributes: { rel: 'nofollow' }
  }
  renderer = CustomRender.new(render_options)
  extensions = {
    autolink: true,
    fenced_code_blocks: true,
    lax_spacing: true,
    no_intra_emphasis: true,
    strikethrough: true,
    superscript: true,
    tables: true
  }
  markdown = Redcarpet::Markdown.new(renderer, extensions)

  text =
  rich_text_style +
  markdown
  .render(ARGV[0])
  .gsub(/<img[^>]*>/, '') # Strip images
  .gsub('</p>', '</p><br>') # Enforce line breaks after paragraphs
  .gsub('</code></pre></div>', '</code></pre></div><br>') # Enforce line breaks after code blocks
end
text = rouge_markdown(ARGV[0])
print Open3.capture2('textutil', '-inputencoding', 'utf8', '-convert', 'rtf', '-stdin', '-stdout', '-format', 'html', stdin_data: text).first()
